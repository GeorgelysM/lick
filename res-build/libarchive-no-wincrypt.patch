--- a/libarchive/archive_crypto.c
+++ b/libarchive/archive_crypto.c
@@ -51,8 +51,8 @@
 static int
 win_crypto_init(Digest_CTX *ctx, ALG_ID algId)
 {
-
-	ctx->valid = 0;
+	return ARCHIVE_FAILED;
+	/*ctx->valid = 0;
 	if (!CryptAcquireContext(&ctx->cryptProv, NULL, NULL,
 	    PROV_RSA_FULL, CRYPT_VERIFYCONTEXT)) {
 		if (GetLastError() != (DWORD)NTE_BAD_KEYSET)
@@ -68,7 +68,7 @@ win_crypto_init(Digest_CTX *ctx, ALG_ID algId)
 	}
 
 	ctx->valid = 1;
-	return (ARCHIVE_OK);
+	return (ARCHIVE_OK);*/
 }
 
 /*
@@ -90,7 +90,8 @@ win_crypto_Update(Digest_CTX *ctx, const unsigned char *buf, size_t len)
 static int
 win_crypto_Final(unsigned char *buf, size_t bufsize, Digest_CTX *ctx)
 {
-	DWORD siglen = (DWORD)bufsize;
+	return ARCHIVE_FAILED;
+	/*DWORD siglen = (DWORD)bufsize;
 
 	if (!ctx->valid)
 		return (ARCHIVE_FAILED);
@@ -99,7 +100,7 @@ win_crypto_Final(unsigned char *buf, size_t bufsize, Digest_CTX *ctx)
 	CryptDestroyHash(ctx->hash);
 	CryptReleaseContext(ctx->cryptProv, 0);
 	ctx->valid = 0;
-	return (ARCHIVE_OK);
+	return (ARCHIVE_OK);*/
 }
 
 #endif /* defined(ARCHIVE_CRYPTO_*_WIN) */
--- a/libarchive/archive_util.c
+++ b/libarchive/archive_util.c
@@ -206,6 +206,8 @@ __archive_errx(int retvalue, const char *msg)
 int
 __archive_mktemp(const char *tmpdir)
 {
+    return -1;
+#if 0
 	static const wchar_t num[] = {
 		L'0', L'1', L'2', L'3', L'4', L'5', L'6', L'7',
 		L'8', L'9', L'A', L'B', L'C', L'D', L'E', L'F',
@@ -343,6 +345,7 @@ exit_tmpfile:
 	free(ws);
 	archive_wstring_free(&temp_name);
 	return (fd);
+#endif
 }
 
 #else
